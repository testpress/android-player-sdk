tasks.register("runPlayerLibraryMappingTasks") {
    dependsOn tasks.copyPlayerViewXML
}

tasks.register("clearOldMappings", Delete) {
    delete layout.projectDirectory.dir("src/main/java/com/tpstream/player/Mapping.kt")
    delete layout.projectDirectory.dir("src/main/res/layout/exo_player_control_view.xml")
    delete layout.projectDirectory.dir("src/main/res/layout/exo_styled_player_control_view.xml")
}

tasks.register("copyPlayerMappingFile", Copy) {
    dependsOn tasks.clearOldMappings

    def mappingFile = useMedia3Library ? "Media3PlayerMapping.kt" : "ExoPlayer2Mapping.kt"

    from project.provider { layout.projectDirectory.file("src/main/player-mapping-files/kotlin/$mappingFile") }
    into project.provider { layout.projectDirectory.dir("src/main/java/com/tpstream/player") }
    rename mappingFile, 'Mapping.kt'
}

tasks.register("copyPlayerControlViewXML", Copy) {
    dependsOn tasks.copyPlayerMappingFile

    def controlViewFile = useMedia3Library ? "media3_player_control_view.xml" : "exo_player2_control_view.xml"
    def mappedViewFile = useMedia3Library ? "exo_player_control_view.xml" : "exo_styled_player_control_view.xml"

    from project.provider { layout.projectDirectory.file("src/main/player-mapping-files/layout/$controlViewFile") }
    into project.provider { layout.projectDirectory.dir("src/main/res/layout") }
    rename controlViewFile, mappedViewFile
}

tasks.register("copyPlayerViewXML", Copy) {
    dependsOn tasks.copyPlayerControlViewXML

    def viewFile = useMedia3Library ? "media3_player_view.xml" : "exo_player2_view.xml"
    def mappedViewFile = "player_view.xml"

    from project.provider { layout.projectDirectory.file("src/main/player-mapping-files/layout/$viewFile") }
    into project.provider { layout.projectDirectory.dir("src/main/res/layout") }
    rename viewFile, mappedViewFile
}