apply plugin: 'maven-publish'

version = VERSION_NAME
group = GROUP

afterEvaluate { project ->
    publishing {
        publications {
            release(MavenPublication) {
                groupId GROUP
                artifactId POM_ARTIFACT_ID
                version VERSION_NAME
                artifact "$buildDir/outputs/aar/$project.name-release.aar"

                pom {

                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL
                    groupId = GROUP
                    artifactId = POM_ARTIFACT_ID
                    version = VERSION_NAME

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }
                }

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    // Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.api.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }


            }
        }

        repositories {
            maven {
                url "$buildDir/repo"
            }
        }
    }
}


task cleanBuildPublish(type: GradleBuild) {
    tasks = ['clean', 'build', 'publishToMavenLocal']
}