plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

ext {
    useMedia3Library = false
}

android {
    namespace 'com.tpstream.player'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
        if (useMedia3Library) {
            manifestPlaceholders = [serviceClassName: "androidx.media3.exoplayer.scheduler.PlatformScheduler\$PlatformSchedulerService"]
        } else {
            manifestPlaceholders = [serviceClassName: "com.google.android.exoplayer2.scheduler.PlatformScheduler\$PlatformSchedulerService"]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets{
        androidTest.assets.srcDirs += file("$projectDir/schemas".toString())
    }

    preBuild.dependsOn "runPlayerLibraryMappingTasks"
}

def media3playerVersion = "1.1.1"
def exoPlayer2Version = "2.19.1"
def room_version = "2.5.2"

dependencies {

    api 'androidx.core:core-ktx:1.7.0'
    api 'androidx.appcompat:appcompat:1.5.1'
    api 'com.google.android.material:material:1.6.1'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    api "com.google.code.gson:gson:2.10"
    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    api "androidx.room:room-ktx:$room_version"
    api 'androidx.fragment:fragment-ktx:1.5.4'
    api 'io.sentry:sentry-android:6.4.2'
    if (useMedia3Library) {
        api "androidx.media3:media3-exoplayer:$media3playerVersion"
        api "androidx.media3:media3-ui:$media3playerVersion"
        api "androidx.media3:media3-exoplayer-dash:$media3playerVersion"
        api "androidx.media3:media3-exoplayer-hls:$media3playerVersion"
        api "androidx.media3:media3-datasource-okhttp:$media3playerVersion"
    } else {
        api "com.google.android.exoplayer:exoplayer:$exoPlayer2Version"
        api "com.google.android.exoplayer:exoplayer-ui:$exoPlayer2Version"
        api "com.google.android.exoplayer:exoplayer-dash:$exoPlayer2Version"
        api "com.google.android.exoplayer:exoplayer-hls:$exoPlayer2Version"
        api "com.google.android.exoplayer:extension-okhttp:$exoPlayer2Version"
    }
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'org.mockito:mockito-core:2.23.4'
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
}

apply from: rootProject.file('gradle/gradle-mvn-build-packages.gradle')
apply from: rootProject.file('gradle/exoplayerMappingTasks.gradle')